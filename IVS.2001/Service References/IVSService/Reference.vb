'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On


Namespace IVSService
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="IVSService.IIVS")>  _
    Public Interface IIVS
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/NewClient", ReplyAction:="http://tempuri.org/IIVS/NewClientResponse")>  _
        Function NewClient(ByVal LicenseGuid As System.Guid, ByVal HostName As String, ByVal IPAddress As String, ByVal ImagePath As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetClientID", ReplyAction:="http://tempuri.org/IIVS/GetClientIDResponse")>  _
        Function GetClientID(ByVal LicenseGuid As System.Guid, ByVal HostName As String) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetClients", ReplyAction:="http://tempuri.org/IIVS/GetClientsResponse")>  _
        Function GetClients(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.Clients()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetLocations", ReplyAction:="http://tempuri.org/IIVS/GetLocationsResponse")>  _
        Function GetLocations(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.Locations()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/UpdateClientIPAddress", ReplyAction:="http://tempuri.org/IIVS/UpdateClientIPAddressResponse")>  _
        Function UpdateClientIPAddress(ByVal LicenseGuid As System.Guid, ByVal ClientID As Integer, ByVal IPAddress As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetClientSettings", ReplyAction:="http://tempuri.org/IIVS/GetClientSettingsResponse")>  _
        Function GetClientSettings(ByVal LicenseGuid As System.Guid, ByVal ClientID As Integer) As IVS.Data.IVSService.ClientSettings
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/SaveClientSettings", ReplyAction:="http://tempuri.org/IIVS/SaveClientSettingsResponse")>  _
        Sub SaveClientSettings(ByVal LicenseGuid As System.Guid, ByVal NewClientSettings As IVS.Data.IVSService.ClientSettings)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetStationName", ReplyAction:="http://tempuri.org/IIVS/GetStationNameResponse")>  _
        Function GetStationName(ByVal LicenseGuid As System.Guid, ByVal ClientID As Integer) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetDeviceInfo", ReplyAction:="http://tempuri.org/IIVS/GetDeviceInfoResponse")>  _
        Function GetDeviceInfo(ByVal LicenseGuid As System.Guid, ByVal ClientID As Integer) As IVS.Data.IVSService.DeviceInfo
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/UpdateDevice", ReplyAction:="http://tempuri.org/IIVS/UpdateDeviceResponse")>  _
        Sub UpdateDevice(ByVal LicenseGuid As System.Guid, ByVal DeviceInfo As IVS.Data.IVSService.DeviceInfo)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetUsers", ReplyAction:="http://tempuri.org/IIVS/GetUsersResponse")>  _
        Function GetUsers(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.UserDetail()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetUserNames", ReplyAction:="http://tempuri.org/IIVS/GetUserNamesResponse")>  _
        Function GetUserNames(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.UserDetail()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetUserName", ReplyAction:="http://tempuri.org/IIVS/GetUserNameResponse")>  _
        Function GetUserName(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetUserPhone", ReplyAction:="http://tempuri.org/IIVS/GetUserPhoneResponse")>  _
        Function GetUserPhone(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetUserDetail", ReplyAction:="http://tempuri.org/IIVS/GetUserDetailResponse")>  _
        Function GetUserDetail(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer) As IVS.Data.IVSService.UserDetail
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/NewUser", ReplyAction:="http://tempuri.org/IIVS/NewUserResponse")>  _
        Sub NewUser(ByVal LicenseGuid As System.Guid, ByVal UserDetail As IVS.Data.IVSService.UserDetail)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/UpdateUser", ReplyAction:="http://tempuri.org/IIVS/UpdateUserResponse")>  _
        Sub UpdateUser(ByVal LicenseGuid As System.Guid, ByVal UserDetail As IVS.Data.IVSService.UserDetail)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/DeleteUser", ReplyAction:="http://tempuri.org/IIVS/DeleteUserResponse")>  _
        Sub DeleteUser(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/EnableUser", ReplyAction:="http://tempuri.org/IIVS/EnableUserResponse")>  _
        Sub EnableUser(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal IsActive As Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/IsUserNameAvailable", ReplyAction:="http://tempuri.org/IIVS/IsUserNameAvailableResponse")>  _
        Function IsUserNameAvailable(ByVal LicenseGuid As System.Guid, ByVal UserName As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/IsUserAuthenticated", ReplyAction:="http://tempuri.org/IIVS/IsUserAuthenticatedResponse")>  _
        Function IsUserAuthenticated(ByVal LicenseGuid As System.Guid, ByVal UserName As String, ByVal Password As String) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetAlerts", ReplyAction:="http://tempuri.org/IIVS/GetAlertsResponse")>  _
        Function GetAlerts(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.AlertDetail()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetAlertDetail", ReplyAction:="http://tempuri.org/IIVS/GetAlertDetailResponse")>  _
        Function GetAlertDetail(ByVal LicenseGuid As System.Guid, ByVal AlertID As Integer) As IVS.Data.IVSService.AlertDetail
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetSwipeScanAlerts", ReplyAction:="http://tempuri.org/IIVS/GetSwipeScanAlertsResponse")>  _
        Function GetSwipeScanAlerts(ByVal LicenseGuid As System.Guid, ByVal IDAccountNumber As String, ByVal NameFirst As String, ByVal NameLast As String) As IVS.Data.IVSService.AlertDetail()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/NewAlert", ReplyAction:="http://tempuri.org/IIVS/NewAlertResponse")>  _
        Sub NewAlert(ByVal LicenseGuid As System.Guid, ByVal AlertDetail As IVS.Data.IVSService.AlertDetail)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/UpdateAlert", ReplyAction:="http://tempuri.org/IIVS/UpdateAlertResponse")>  _
        Sub UpdateAlert(ByVal LicenseGuid As System.Guid, ByVal AlertDetail As IVS.Data.IVSService.AlertDetail)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/DeleteAlert", ReplyAction:="http://tempuri.org/IIVS/DeleteAlertResponse")>  _
        Sub DeleteAlert(ByVal LicenseGuid As System.Guid, ByVal AlertID As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/EnableAlert", ReplyAction:="http://tempuri.org/IIVS/EnableAlertResponse")>  _
        Sub EnableAlert(ByVal LicenseGuid As System.Guid, ByVal AlertID As Integer, ByVal IsActive As Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/UpdateImageAvailable", ReplyAction:="http://tempuri.org/IIVS/UpdateImageAvailableResponse")>  _
        Sub UpdateImageAvailable(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/NewDataSwipeScan", ReplyAction:="http://tempuri.org/IIVS/NewDataSwipeScanResponse"),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.Clients())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.Clients)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.Locations())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.Locations)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.ClientSettings)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.DeviceInfo)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.UserDetail())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.UserDetail)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.AlertDetail())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.AlertDetail)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.SwipeScanDetail)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.SwipeScanHistory())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.SwipeScanHistory)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.SwipeScanNavigateInfo)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.SwipeScanSearch())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.SwipeScanSearch)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.TEPViolations())),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.TEPViolations)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.TEPClientSettings)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.TEPSwipeScanDetail)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.TEPSwipeScanViolations)),  _
         System.ServiceModel.ServiceKnownTypeAttribute(GetType(IVS.Data.IVSService.TEPSwipeScanViolations()))>  _
        Function NewDataSwipeScan(ByVal LicenseGuid As System.Guid, ByVal SwipeScanInfo As IVS.Data.IVSService.SwipeScanInfo) As IVS.Data.IVSService.SwipeScanDetail
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/NewDataSwipeScanManual", ReplyAction:="http://tempuri.org/IIVS/NewDataSwipeScanManualResponse")>  _
        Function NewDataSwipeScanManual(ByVal LicenseGuid As System.Guid, ByVal SwipeScanDetail As IVS.Data.IVSService.SwipeScanDetail) As Integer
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetSwipeScanDetail", ReplyAction:="http://tempuri.org/IIVS/GetSwipeScanDetailResponse")>  _
        Function GetSwipeScanDetail(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer, ByVal SwipeScanType As String) As IVS.Data.IVSService.SwipeScanDetail
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetSwipeScanHistory", ReplyAction:="http://tempuri.org/IIVS/GetSwipeScanHistoryResponse")>  _
        Function GetSwipeScanHistory(ByVal LicenseGuid As System.Guid, ByVal IDAccountNumber As String, ByVal SwipeScanType As String) As IVS.Data.IVSService.SwipeScanHistory()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetSwipeScanType", ReplyAction:="http://tempuri.org/IIVS/GetSwipeScanTypeResponse")>  _
        Function GetSwipeScanType(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/SwipeScanNavigateFirst", ReplyAction:="http://tempuri.org/IIVS/SwipeScanNavigateFirstResponse")>  _
        Function SwipeScanNavigateFirst(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal ClientID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/SwipeScanNavigatePrevious", ReplyAction:="http://tempuri.org/IIVS/SwipeScanNavigatePreviousResponse")>  _
        Function SwipeScanNavigatePrevious(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal ClientID As Integer, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/SwipeScanNavigatePosition", ReplyAction:="http://tempuri.org/IIVS/SwipeScanNavigatePositionResponse")>  _
        Function SwipeScanNavigatePosition(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/SwipeScanNavigateNext", ReplyAction:="http://tempuri.org/IIVS/SwipeScanNavigateNextResponse")>  _
        Function SwipeScanNavigateNext(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal ClientID As Integer, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/SwipeScanNavigateLast", ReplyAction:="http://tempuri.org/IIVS/SwipeScanNavigateLastResponse")>  _
        Function SwipeScanNavigateLast(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal ClientID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/DeleteSwipeScan", ReplyAction:="http://tempuri.org/IIVS/DeleteSwipeScanResponse")>  _
        Sub DeleteSwipeScan(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/UpdateCaseID", ReplyAction:="http://tempuri.org/IIVS/UpdateCaseIDResponse")>  _
        Sub UpdateCaseID(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer, ByVal CaseID As String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetSwipeScanSearch", ReplyAction:="http://tempuri.org/IIVS/GetSwipeScanSearchResponse")>  _
        Function GetSwipeScanSearch(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.SwipeScanSearch()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetTEPViolations", ReplyAction:="http://tempuri.org/IIVS/GetTEPViolationsResponse")>  _
        Function GetTEPViolations(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.TEPViolations()
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetTEPClientSettings", ReplyAction:="http://tempuri.org/IIVS/GetTEPClientSettingsResponse")>  _
        Function GetTEPClientSettings(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.TEPClientSettings
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/NewDataSwipeScan_TEP", ReplyAction:="http://tempuri.org/IIVS/NewDataSwipeScan_TEPResponse")>  _
        Sub NewDataSwipeScan_TEP(ByVal LicenseGuid As System.Guid, ByVal TEPSwipeScanDetail As IVS.Data.IVSService.TEPSwipeScanDetail)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/NewDataSwipeScan_Violation", ReplyAction:="http://tempuri.org/IIVS/NewDataSwipeScan_ViolationResponse")>  _
        Sub NewDataSwipeScan_Violation(ByVal LicenseGuid As System.Guid, ByVal TEPSwipeScanViolation As IVS.Data.IVSService.TEPSwipeScanViolations)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetSwipeScanDetail_TEP", ReplyAction:="http://tempuri.org/IIVS/GetSwipeScanDetail_TEPResponse")>  _
        Function GetSwipeScanDetail_TEP(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.TEPSwipeScanDetail
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IIVS/GetSwipeScanDetail_Violations", ReplyAction:="http://tempuri.org/IIVS/GetSwipeScanDetail_ViolationsResponse")>  _
        Function GetSwipeScanDetail_Violations(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.TEPSwipeScanViolations()
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IIVSChannel
        Inherits IVSService.IIVS, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class IVSClient
        Inherits System.ServiceModel.ClientBase(Of IVSService.IIVS)
        Implements IVSService.IIVS
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function NewClient(ByVal LicenseGuid As System.Guid, ByVal HostName As String, ByVal IPAddress As String, ByVal ImagePath As String) As Integer Implements IVSService.IIVS.NewClient
            Return MyBase.Channel.NewClient(LicenseGuid, HostName, IPAddress, ImagePath)
        End Function
        
        Public Function GetClientID(ByVal LicenseGuid As System.Guid, ByVal HostName As String) As String Implements IVSService.IIVS.GetClientID
            Return MyBase.Channel.GetClientID(LicenseGuid, HostName)
        End Function
        
        Public Function GetClients(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.Clients() Implements IVSService.IIVS.GetClients
            Return MyBase.Channel.GetClients(LicenseGuid)
        End Function
        
        Public Function GetLocations(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.Locations() Implements IVSService.IIVS.GetLocations
            Return MyBase.Channel.GetLocations(LicenseGuid)
        End Function
        
        Public Function UpdateClientIPAddress(ByVal LicenseGuid As System.Guid, ByVal ClientID As Integer, ByVal IPAddress As String) As Boolean Implements IVSService.IIVS.UpdateClientIPAddress
            Return MyBase.Channel.UpdateClientIPAddress(LicenseGuid, ClientID, IPAddress)
        End Function
        
        Public Function GetClientSettings(ByVal LicenseGuid As System.Guid, ByVal ClientID As Integer) As IVS.Data.IVSService.ClientSettings Implements IVSService.IIVS.GetClientSettings
            Return MyBase.Channel.GetClientSettings(LicenseGuid, ClientID)
        End Function
        
        Public Sub SaveClientSettings(ByVal LicenseGuid As System.Guid, ByVal NewClientSettings As IVS.Data.IVSService.ClientSettings) Implements IVSService.IIVS.SaveClientSettings
            MyBase.Channel.SaveClientSettings(LicenseGuid, NewClientSettings)
        End Sub
        
        Public Function GetStationName(ByVal LicenseGuid As System.Guid, ByVal ClientID As Integer) As String Implements IVSService.IIVS.GetStationName
            Return MyBase.Channel.GetStationName(LicenseGuid, ClientID)
        End Function
        
        Public Function GetDeviceInfo(ByVal LicenseGuid As System.Guid, ByVal ClientID As Integer) As IVS.Data.IVSService.DeviceInfo Implements IVSService.IIVS.GetDeviceInfo
            Return MyBase.Channel.GetDeviceInfo(LicenseGuid, ClientID)
        End Function
        
        Public Sub UpdateDevice(ByVal LicenseGuid As System.Guid, ByVal DeviceInfo As IVS.Data.IVSService.DeviceInfo) Implements IVSService.IIVS.UpdateDevice
            MyBase.Channel.UpdateDevice(LicenseGuid, DeviceInfo)
        End Sub
        
        Public Function GetUsers(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.UserDetail() Implements IVSService.IIVS.GetUsers
            Return MyBase.Channel.GetUsers(LicenseGuid)
        End Function
        
        Public Function GetUserNames(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.UserDetail() Implements IVSService.IIVS.GetUserNames
            Return MyBase.Channel.GetUserNames(LicenseGuid)
        End Function
        
        Public Function GetUserName(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer) As String Implements IVSService.IIVS.GetUserName
            Return MyBase.Channel.GetUserName(LicenseGuid, UserID)
        End Function
        
        Public Function GetUserPhone(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer) As String Implements IVSService.IIVS.GetUserPhone
            Return MyBase.Channel.GetUserPhone(LicenseGuid, UserID)
        End Function
        
        Public Function GetUserDetail(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer) As IVS.Data.IVSService.UserDetail Implements IVSService.IIVS.GetUserDetail
            Return MyBase.Channel.GetUserDetail(LicenseGuid, UserID)
        End Function
        
        Public Sub NewUser(ByVal LicenseGuid As System.Guid, ByVal UserDetail As IVS.Data.IVSService.UserDetail) Implements IVSService.IIVS.NewUser
            MyBase.Channel.NewUser(LicenseGuid, UserDetail)
        End Sub
        
        Public Sub UpdateUser(ByVal LicenseGuid As System.Guid, ByVal UserDetail As IVS.Data.IVSService.UserDetail) Implements IVSService.IIVS.UpdateUser
            MyBase.Channel.UpdateUser(LicenseGuid, UserDetail)
        End Sub
        
        Public Sub DeleteUser(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer) Implements IVSService.IIVS.DeleteUser
            MyBase.Channel.DeleteUser(LicenseGuid, UserID)
        End Sub
        
        Public Sub EnableUser(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal IsActive As Boolean) Implements IVSService.IIVS.EnableUser
            MyBase.Channel.EnableUser(LicenseGuid, UserID, IsActive)
        End Sub
        
        Public Function IsUserNameAvailable(ByVal LicenseGuid As System.Guid, ByVal UserName As String) As Boolean Implements IVSService.IIVS.IsUserNameAvailable
            Return MyBase.Channel.IsUserNameAvailable(LicenseGuid, UserName)
        End Function
        
        Public Function IsUserAuthenticated(ByVal LicenseGuid As System.Guid, ByVal UserName As String, ByVal Password As String) As Integer Implements IVSService.IIVS.IsUserAuthenticated
            Return MyBase.Channel.IsUserAuthenticated(LicenseGuid, UserName, Password)
        End Function
        
        Public Function GetAlerts(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.AlertDetail() Implements IVSService.IIVS.GetAlerts
            Return MyBase.Channel.GetAlerts(LicenseGuid)
        End Function
        
        Public Function GetAlertDetail(ByVal LicenseGuid As System.Guid, ByVal AlertID As Integer) As IVS.Data.IVSService.AlertDetail Implements IVSService.IIVS.GetAlertDetail
            Return MyBase.Channel.GetAlertDetail(LicenseGuid, AlertID)
        End Function
        
        Public Function GetSwipeScanAlerts(ByVal LicenseGuid As System.Guid, ByVal IDAccountNumber As String, ByVal NameFirst As String, ByVal NameLast As String) As IVS.Data.IVSService.AlertDetail() Implements IVSService.IIVS.GetSwipeScanAlerts
            Return MyBase.Channel.GetSwipeScanAlerts(LicenseGuid, IDAccountNumber, NameFirst, NameLast)
        End Function
        
        Public Sub NewAlert(ByVal LicenseGuid As System.Guid, ByVal AlertDetail As IVS.Data.IVSService.AlertDetail) Implements IVSService.IIVS.NewAlert
            MyBase.Channel.NewAlert(LicenseGuid, AlertDetail)
        End Sub
        
        Public Sub UpdateAlert(ByVal LicenseGuid As System.Guid, ByVal AlertDetail As IVS.Data.IVSService.AlertDetail) Implements IVSService.IIVS.UpdateAlert
            MyBase.Channel.UpdateAlert(LicenseGuid, AlertDetail)
        End Sub
        
        Public Sub DeleteAlert(ByVal LicenseGuid As System.Guid, ByVal AlertID As Integer) Implements IVSService.IIVS.DeleteAlert
            MyBase.Channel.DeleteAlert(LicenseGuid, AlertID)
        End Sub
        
        Public Sub EnableAlert(ByVal LicenseGuid As System.Guid, ByVal AlertID As Integer, ByVal IsActive As Boolean) Implements IVSService.IIVS.EnableAlert
            MyBase.Channel.EnableAlert(LicenseGuid, AlertID, IsActive)
        End Sub
        
        Public Sub UpdateImageAvailable(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) Implements IVSService.IIVS.UpdateImageAvailable
            MyBase.Channel.UpdateImageAvailable(LicenseGuid, SwipeScanID)
        End Sub
        
        Public Function NewDataSwipeScan(ByVal LicenseGuid As System.Guid, ByVal SwipeScanInfo As IVS.Data.IVSService.SwipeScanInfo) As IVS.Data.IVSService.SwipeScanDetail Implements IVSService.IIVS.NewDataSwipeScan
            Return MyBase.Channel.NewDataSwipeScan(LicenseGuid, SwipeScanInfo)
        End Function
        
        Public Function NewDataSwipeScanManual(ByVal LicenseGuid As System.Guid, ByVal SwipeScanDetail As IVS.Data.IVSService.SwipeScanDetail) As Integer Implements IVSService.IIVS.NewDataSwipeScanManual
            Return MyBase.Channel.NewDataSwipeScanManual(LicenseGuid, SwipeScanDetail)
        End Function
        
        Public Function GetSwipeScanDetail(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer, ByVal SwipeScanType As String) As IVS.Data.IVSService.SwipeScanDetail Implements IVSService.IIVS.GetSwipeScanDetail
            Return MyBase.Channel.GetSwipeScanDetail(LicenseGuid, SwipeScanID, SwipeScanType)
        End Function
        
        Public Function GetSwipeScanHistory(ByVal LicenseGuid As System.Guid, ByVal IDAccountNumber As String, ByVal SwipeScanType As String) As IVS.Data.IVSService.SwipeScanHistory() Implements IVSService.IIVS.GetSwipeScanHistory
            Return MyBase.Channel.GetSwipeScanHistory(LicenseGuid, IDAccountNumber, SwipeScanType)
        End Function
        
        Public Function GetSwipeScanType(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) As String Implements IVSService.IIVS.GetSwipeScanType
            Return MyBase.Channel.GetSwipeScanType(LicenseGuid, SwipeScanID)
        End Function
        
        Public Function SwipeScanNavigateFirst(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal ClientID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo Implements IVSService.IIVS.SwipeScanNavigateFirst
            Return MyBase.Channel.SwipeScanNavigateFirst(LicenseGuid, UserID, ClientID)
        End Function
        
        Public Function SwipeScanNavigatePrevious(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal ClientID As Integer, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo Implements IVSService.IIVS.SwipeScanNavigatePrevious
            Return MyBase.Channel.SwipeScanNavigatePrevious(LicenseGuid, UserID, ClientID, SwipeScanID)
        End Function
        
        Public Function SwipeScanNavigatePosition(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo Implements IVSService.IIVS.SwipeScanNavigatePosition
            Return MyBase.Channel.SwipeScanNavigatePosition(LicenseGuid, SwipeScanID)
        End Function
        
        Public Function SwipeScanNavigateNext(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal ClientID As Integer, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo Implements IVSService.IIVS.SwipeScanNavigateNext
            Return MyBase.Channel.SwipeScanNavigateNext(LicenseGuid, UserID, ClientID, SwipeScanID)
        End Function
        
        Public Function SwipeScanNavigateLast(ByVal LicenseGuid As System.Guid, ByVal UserID As Integer, ByVal ClientID As Integer) As IVS.Data.IVSService.SwipeScanNavigateInfo Implements IVSService.IIVS.SwipeScanNavigateLast
            Return MyBase.Channel.SwipeScanNavigateLast(LicenseGuid, UserID, ClientID)
        End Function
        
        Public Sub DeleteSwipeScan(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) Implements IVSService.IIVS.DeleteSwipeScan
            MyBase.Channel.DeleteSwipeScan(LicenseGuid, SwipeScanID)
        End Sub
        
        Public Sub UpdateCaseID(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer, ByVal CaseID As String) Implements IVSService.IIVS.UpdateCaseID
            MyBase.Channel.UpdateCaseID(LicenseGuid, SwipeScanID, CaseID)
        End Sub
        
        Public Function GetSwipeScanSearch(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.SwipeScanSearch() Implements IVSService.IIVS.GetSwipeScanSearch
            Return MyBase.Channel.GetSwipeScanSearch(LicenseGuid)
        End Function
        
        Public Function GetTEPViolations(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.TEPViolations() Implements IVSService.IIVS.GetTEPViolations
            Return MyBase.Channel.GetTEPViolations(LicenseGuid)
        End Function
        
        Public Function GetTEPClientSettings(ByVal LicenseGuid As System.Guid) As IVS.Data.IVSService.TEPClientSettings Implements IVSService.IIVS.GetTEPClientSettings
            Return MyBase.Channel.GetTEPClientSettings(LicenseGuid)
        End Function
        
        Public Sub NewDataSwipeScan_TEP(ByVal LicenseGuid As System.Guid, ByVal TEPSwipeScanDetail As IVS.Data.IVSService.TEPSwipeScanDetail) Implements IVSService.IIVS.NewDataSwipeScan_TEP
            MyBase.Channel.NewDataSwipeScan_TEP(LicenseGuid, TEPSwipeScanDetail)
        End Sub
        
        Public Sub NewDataSwipeScan_Violation(ByVal LicenseGuid As System.Guid, ByVal TEPSwipeScanViolation As IVS.Data.IVSService.TEPSwipeScanViolations) Implements IVSService.IIVS.NewDataSwipeScan_Violation
            MyBase.Channel.NewDataSwipeScan_Violation(LicenseGuid, TEPSwipeScanViolation)
        End Sub
        
        Public Function GetSwipeScanDetail_TEP(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.TEPSwipeScanDetail Implements IVSService.IIVS.GetSwipeScanDetail_TEP
            Return MyBase.Channel.GetSwipeScanDetail_TEP(LicenseGuid, SwipeScanID)
        End Function
        
        Public Function GetSwipeScanDetail_Violations(ByVal LicenseGuid As System.Guid, ByVal SwipeScanID As Integer) As IVS.Data.IVSService.TEPSwipeScanViolations() Implements IVSService.IIVS.GetSwipeScanDetail_Violations
            Return MyBase.Channel.GetSwipeScanDetail_Violations(LicenseGuid, SwipeScanID)
        End Function
    End Class
End Namespace
